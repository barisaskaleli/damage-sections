import { useState } from "react";
import { Row, Col, Table, CustomInput } from "reactstrap";
import { damageAreas, damageSections } from "../src/DamageAreas";

const App = () => {
  const [parts, setParts] = useState(damageSections);

  const fillParts = (index, val, inOrder) => {
    const sectionType = val;

    const partState = parts[sectionType].state;
    const partColor = parts[sectionType].color;

    const partData = {
      state: partState,
      sectionType,
      color: partColor
    };

    if (inOrder === true) {
      if (partState === "CLEAR") {
        partData.state = "SCRATCHED";
        partData.color = "#4caf50";
      } else if (partState === "SCRATCHED") {
        partData.state = "PAINTED";
        partData.color = "#4a90e2";
      } else if (partState === "PAINTED") {
        partData.state = "REPLACED";
        partData.color = "#ff5252";
      } else {
        partData.state = "CLEAR";
        partData.color = "#f6f6f6";
      }
    } else {
      partData.state = inOrder.state;
      partData.color = inOrder.color;
    }

    setParts((prevParts) => {
      return {
        ...prevParts,
        [sectionType]: partData
      };
    });
  };

  return (
    <div>
      <Row>
        <Col md={5}>
          <svg xmlns="http://www.w3.org/2000/svg" style={{ height: 400 }}>
            <g fill="none" fillRule="evenodd">
              <g transform="rotate(-90 210 198)">
                <path
                  stroke="#D3D2D2"
                  d="M311.85 23.096c0-1.3-.2-2.549-.502-3.85l-2.862-11.08.402-2.444c.402-2.237-1.205-4.317-3.414-4.422L285.544.156c-1.407-.104-2.511 1.144-2.41 2.549.2 2.185.451 4.421.502 6.814.401 13.472-9.84 24.916-22.842 24.76-12.4-.104-22.441-10.559-22.441-23.46 0-2.965.05-5.618.25-8.323.101-1.352-.953-2.496-2.259-2.496h-110.6c-1.405 0-2.46 1.248-2.259 2.704.352 2.341.502 4.734.502 7.335.151 13.004-9.94 24.188-22.49 24.292-12.602.104-22.843-10.455-22.843-23.46 0-.676.05-1.405.1-2.08.151-1.561-1.254-2.758-2.71-2.446l-2.962.625c-1.306.104-5.322.572-8.886 3.9-1.556 1.457-2.56 3.018-3.263 4.422a29.039 29.039 0 01-4.619 6.763l-2.46 2.704c-1.858 3.226-.1 6.71-.251 10.455-.2 6.45 3.815 12.692 2.209 19.142-.251.937.1 1.977.853 2.497 2.661 1.925 5.824 2.913 9.087 2.913H77.3a3.61 3.61 0 011.807.468c2.611 1.665 5.171 3.381 7.782 5.046 9.639 6.294 20.182 10.924 31.327 13.576.602.156 1.205.26 1.807.416a108.728 108.728 0 0020.282 2.497h20.734c20.935 0 41.518-5.67 59.691-16.437l21.738-12.848 43.928-7.647a43.476 43.476 0 0019.027-8.374c.05-.052 6.426-3.485 6.426-13.368z"
                />
                <path
                  onClick={() => {
                    fillParts(0, "LEFT_REAR_DOOR", true);
                  }}
                  fill={parts.LEFT_REAR_DOOR.color}
                  fillRule="nonzero"
                  d="M106.51 55.944c-.522.934-.664 2.015-.332 2.997.854 2.506 2.56 4.521 4.79 5.75l4.648 2.506a65.366 65.366 0 0031.158 7.91h13.42l3.13-17.247a122.034 122.034 0 001.992-21.965V10.048c-2.418 0-8.062-.05-13.706-.05-4.315 0-7.777 0-10.196.05-1.85 0-3.794 1.08-5.311 2.948a43.284 43.284 0 00-3.272 4.52c-1.044 1.672-1.66 2.95-2.23 4.178-.71 1.474-1.375 2.899-2.608 4.619a28.923 28.923 0 01-4.505 4.913c-3.415 2.949-6.308 6.388-8.584 10.32l-.047.049v.049l-8.347 14.299zm5.027-.884a11.223 11.223 0 017.35-2.752h40.549c.806 0 1.422.737 1.328 1.572l-2.419 16.412c-.237 1.573-1.518 2.703-3.035 2.654l-10.15-.197a54.514 54.514 0 01-26.936-7.764l-3.13-1.867a11.029 11.029 0 01-4.221-4.57c-.617-1.18-.332-2.653.664-3.489z"
                />
                <path
                  onClick={() => {
                    fillParts(0, "LEFT_FRONT_DOOR", true);
                  }}
                  fill={parts.LEFT_FRONT_DOOR.color}
                  fillRule="nonzero"
                  d="M166.04 58.376L163 75.108l2.945-.148c18.476-.984 36.62-6.742 52.483-16.634a16.49 16.49 0 007.077-9.547 84.654 84.654 0 002.185-35.53l-.285-1.723c-.143-.886-.855-1.526-1.758-1.526h-57.613v25.886c0 7.53-.665 15.108-1.994 22.49zm-.285 12.352l3.847-15.994c.428-1.722 1.853-2.953 3.562-3.051l34.055-1.92v-.049c0-2.559 1.995-4.675 4.513-4.675h7.314c.617 0 1.187.148 1.757.345.238.098.333.393.238.64-.095.245-.38.344-.618.245a3.306 3.306 0 00-1.377-.295h-7.314c-1.995 0-3.61 1.673-3.61 3.74v.05c0 2.312 1.805 4.183 4.037 4.183h7.552l-.38.246c-13.489 9.3-28.783 15.305-44.836 17.52l-7.077.984c-.997.197-1.9-.837-1.662-1.969z"
                />
                <path
                  fill="#fff"
                  fillRule="nonzero"
                  stroke="#D3D2D2"
                  d="M300.87 101.87c-2.31-4.317-5.874-7.699-10.241-9.675a20.677 20.677 0 00-8.635-1.873h-54.119c-.05-.26-.1-.416-.15-.52-.603-2.029-2.661-8.739-7.782-11.08-1.858-.884-3.263-.728-3.564-.676-.201 0-1.406.156-2.009.676-2.158 1.82 2.41 8.323 4.92 11.6h-68.879c-2.158 0-4.367-.26-6.476-.832-2.108-.572-4.317-.833-6.476-.833H85.9c-2.962 0-5.874.573-8.635 1.665-9.84 3.953-19.479 10.143-21.437 20.911-2.008 10.82-2.36 22.211-2.36 32.927 0 8.999.252 18.414 1.507 27.621h-4.268c-.602 0-1.656 0-1.707 3.485 0 3.433 1.306 3.485 3.364 3.485h3.765c2.61 9.78 11.748 15.553 21.085 19.298a23.417 23.417 0 008.635 1.665h51.56c2.208 0 4.367-.26 6.475-.833 2.109-.572 4.318-.832 6.477-.832h68.879c-2.51 3.277-7.079 9.78-4.92 11.6.602.52 1.807.676 2.008.676.301.052 1.707.208 3.564-.676 5.07-2.34 7.129-9.05 7.782-11.08.05-.104.1-.312.15-.52h54.12c2.961 0 5.923-.624 8.634-1.873 4.318-1.976 7.932-5.357 10.241-9.675 4.418-8.375 10.844-23.668 10.844-42.342.05-18.622-6.376-33.915-10.794-42.29zm-186.3-4.473h101.66c.653 0 .803.936.15 1.144l-26.456 7.959c-2.21.676-4.519.988-6.828.988h-44.38a23.55 23.55 0 01-10.141-2.289l-14.258-6.71c-.552-.26-.351-1.093.251-1.093zm-14.91 83.278c-1.857-11.08-2.912-23.46-2.912-36.464s1.054-25.384 2.912-36.464c.301-1.768 2.108-2.704 3.665-1.976l14.057 7.022a2.715 2.715 0 011.456 2.757c-1.105 8.27-1.757 18.102-1.757 28.609 0 10.507.652 20.339 1.757 28.609.15 1.144-.452 2.289-1.456 2.757l-14.057 7.022c-1.557.884-3.364-.104-3.665-1.872zm116.57 10.351H114.57c-.602 0-.803-.832-.251-1.144l14.258-6.71a23.55 23.55 0 0110.141-2.289h44.38c2.31 0 4.619.364 6.828.988l26.457 7.959c.602.208.502 1.196-.151 1.196zm12.551-7.542c-.703 2.6-3.313 4.11-5.824 3.381l-26.708-7.802c-2.41-.729-3.865-3.226-3.313-5.774 1.807-8.583 2.811-18.518 2.811-29.13 0-10.611-1.004-20.547-2.811-29.13-.502-2.55.904-5.046 3.313-5.774l26.708-7.803c2.51-.728 5.121.78 5.824 3.381 3.364 12.016 5.221 25.28 5.221 39.325 0 14.045-1.857 27.361-5.221 39.325z"
                />
                <path
                  onClick={() => {
                    fillParts(0, "LEFT_REAR_FENDER", true);
                  }}
                  fill={parts.LEFT_REAR_FENDER.color}
                  fillRule="nonzero"
                  d="M59.277 54.594s6.118 1.95 15.529.975l5.365.293s9.223 7.509 12.047 7.216c2.823-.341 7.717-8.435 7.717-8.435L110.57 35.14c-.141.244-15.2 3.413-22.164-1.414-6.023-4.193-10.682-10.824-11.482-17.846l-.8-4.876s-9.317-.39-12.329 6.582c-3.012 6.973-6.541 9.46-6.541 9.46s-.941 10.629.8 13.262c1.694 2.584 1.224 14.286 1.224 14.286z"
                />
                <path
                  onClick={() => {
                    fillParts(0, "LEFT_FRONT_FENDER", true);
                  }}
                  fill={parts.LEFT_FRONT_FENDER.color}
                  fillRule="nonzero"
                  d="M234.26 49.983l53.188-9.03s15.014-4.465 16.577-8.686c1.563-4.22 2.368-7.017 1.563-10.109-.805-3.091-2.842-10.502-2.842-10.502s3.316-6.183-.616-6.183c-3.93 0-15.958-.981-15.958-.981s2.322 32.474-25.53 32.907c-25.569.396-24.905-28.637-24.905-28.637h-5.881s5.73 23.212 0 41.222h4.404z"
                />
                <path
                  stroke="#D3D2D2"
                  d="M305.44 252.31c-5.623-4.317-12.099-7.178-19.027-8.375l-43.928-7.646-21.738-12.848c-18.174-10.768-38.757-16.437-59.691-16.437h-20.734c-5.824.208-12.701.832-20.282 2.496-.602.157-1.205.26-1.807.417-11.095 2.6-21.638 7.282-31.327 13.576-2.61 1.664-5.171 3.38-7.782 5.045a3.75 3.75 0 01-1.807.468H65.77c-3.263 0-6.426 1.04-9.087 2.914-.803.572-1.104 1.56-.853 2.496 1.606 6.45-2.46 12.692-2.21 19.142.101 3.746-1.606 7.283.252 10.455.803.885 1.656 1.82 2.46 2.705 1.857 2.029 3.414 4.266 4.618 6.762.703 1.353 1.707 2.965 3.264 4.422 3.564 3.329 7.58 3.797 8.886 3.901l2.962.624c1.455.312 2.811-.936 2.71-2.444-.05-.677-.1-1.353-.1-2.081 0-13.004 10.241-23.564 22.842-23.46 12.551.104 22.642 11.288 22.491 24.292-.05 2.6-.15 4.994-.502 7.334-.2 1.405.854 2.705 2.26 2.705h110.55c1.305 0 2.359-1.144 2.258-2.497-.2-2.704-.25-5.305-.25-8.322 0-12.9 10.04-23.356 22.44-23.46 13.003-.104 23.244 11.34 22.842 24.76-.05 2.393-.3 4.63-.502 6.814-.15 1.456 1.004 2.653 2.41 2.549l19.931-1.145c2.209-.104 3.765-2.184 3.414-4.421l-.402-2.445 2.862-11.08c.351-1.3.502-2.549.502-3.85 0-9.935-6.376-13.367-6.376-13.367z"
                />
                <path
                  onClick={() => {
                    fillParts(0, "RIGHT_FRONT_FENDER", true);
                  }}
                  fill={parts.RIGHT_FRONT_FENDER.color}
                  fillRule="nonzero"
                  d="M234.26 284.01l53.188-9.03s15.014-4.465 16.577-8.686c1.563-4.22 2.368-7.017 1.563-10.109-.805-3.091-2.842-10.502-2.842-10.502s3.316-6.183-.616-6.183c-3.93 0-15.958-.981-15.958-.981s2.322 32.474-25.53 32.907c-25.569.396-24.905-28.637-24.905-28.637h-5.881s5.73 23.212 0 41.222h4.404z"
                  transform="matrix(1 0 0 -1 0 522.52)"
                />
                <path
                  onClick={() => {
                    fillParts(0, "RIGHT_REAR_DOOR", true);
                  }}
                  fill={parts.RIGHT_REAR_DOOR.color}
                  fillRule="nonzero"
                  d="M114.9 247.46l.047.098c2.277 3.931 5.17 7.42 8.584 10.32a25.478 25.478 0 014.506 4.913c1.233 1.72 1.897 3.145 2.608 4.62.616 1.228 1.233 2.554 2.229 4.176a43.287 43.287 0 003.272 4.52c1.518 1.819 3.462 2.9 5.312 2.949 2.466.049 5.88.049 10.196.049 5.596 0 11.287-.05 13.706-.05V253.21c0-7.37-.664-14.741-1.992-21.965l-3.13-17.248h-13.47c-10.812 0-21.577 2.751-31.157 7.911l-4.648 2.506c-2.276 1.229-3.936 3.243-4.79 5.75-.332.982-.19 2.063.332 2.997l8.394 14.299zm-3.984-16.904a11.03 11.03 0 014.221-4.57l3.13-1.867a54.515 54.515 0 0126.937-7.764l10.15-.197c1.517-.049 2.845 1.13 3.034 2.654l2.419 16.412a1.33 1.33 0 01-1.328 1.572h-40.548c-2.703 0-5.264-.982-7.35-2.751-.95-.836-1.234-2.31-.665-3.49z"
                />
                <path
                  onClick={() => {
                    fillParts(0, "RIGHT_FRONT_DOOR", true);
                  }}
                  fill={parts.RIGHT_FRONT_DOOR.color}
                  fillRule="nonzero"
                  d="M169.03 253.22v25.886h57.66c.855 0 1.615-.64 1.757-1.526l.285-1.722a84.653 84.653 0 00-2.184-35.531c-1.14-3.986-3.658-7.382-7.077-9.547-15.911-9.941-34.055-15.65-52.531-16.634l-2.945-.148 3.04 16.732a127.28 127.28 0 011.994 22.49zm-.522-36.86l7.076.984c16.054 2.215 31.395 8.219 44.836 17.52l.38.246h-7.551c-2.233 0-4.038 1.87-4.038 4.183v.05c0 2.067 1.615 3.74 3.61 3.74h7.314c.475 0 .95-.099 1.378-.296.237-.098.522 0 .617.247.095.246 0 .54-.237.64-.57.245-1.14.344-1.758.344h-7.314c-2.47 0-4.512-2.067-4.512-4.675v-.05l-34.055-1.919c-1.71-.098-3.135-1.329-3.562-3.051l-3.848-15.994a1.528 1.528 0 011.663-1.969z"
                />
                <path
                  onClick={() => {
                    fillParts(0, "RIGHT_REAR_FENDER", true);
                  }}
                  fill={parts.RIGHT_REAR_FENDER.color}
                  fillRule="nonzero"
                  d="M58.43 234.06s6.526-2.08 16.567-1.04l5.723-.312s9.84-8.011 12.852-7.699c3.012.364 8.234 9 8.234 9l11.346 20.806c-.151-.26-16.216-3.641-23.646 1.509-6.426 4.473-11.396 11.548-12.25 19.038l-.854 5.201s-9.94.416-13.153-7.022c-3.213-7.438-6.978-10.091-6.978-10.091s-1.004-11.34.853-14.149c1.808-2.757 1.306-15.241 1.306-15.241z"
                />
                <path
                  onClick={() => {
                    fillParts(0, "FRONT_HOOD", true);
                  }}
                  fill={parts.FRONT_HOOD.color}
                  fillRule="nonzero"
                  d="M230 100s14.961 40.833 0 87.129h53.968s20.633-8.167 18.876-43.07C301.087 109.155 283.968 100 283.968 100H230z"
                />
                <path
                  onClick={() => {
                    fillParts(0, "REAR_HOOD", true);
                  }}
                  fill={parts.REAR_HOOD.color}
                  fillRule="nonzero"
                  d="M95.64 100.03H71.743S61 98.73 61 113.034v65.594s1.707 8.79 8.484 8.79H95.64s-8.534-37.711 0-87.388z"
                />
                <path
                  onClick={() => {
                    fillParts(0, "CEILING", true);
                  }}
                  fill={parts.CEILING.color}
                  fillRule="nonzero"
                  d="M126.16 111s-10.794 28.349-1.155 64.501h63.658s8.786-32.771 0-64.501H126.16z"
                />
              </g>
              <path
                d="M59.7 160.4l-2.3-13.3-2.3-13.3-2.1-13.2-.8-2.4c-.5-1.4-1.2-3.4-2-5.3-.8-2-1.8-4-2.8-5.6-1-1.6-2.1-2.9-3.1-3.3-1.1-.4-2-.7-2.9-1-.9-.3-1.7-.5-2.5-.7-.8-.1-1.6-.2-2.3-.2-.8 0-1.5.1-2.3.3-.8.2-1.8.5-3 .8-1.1.3-2.3.6-3.5.9s-2.1.6-2.9.8c-.7.2-1.2.3-1.2.3l-1-.5c-.6-.3-1.3-.5-2.1-.7-.8-.2-1.5-.2-2.1 0-.6.2-1 .8-1 1.8s-.1 2.5-.2 4.2-.2 3.5-.3 5.3c-.1 1.8-.2 3.4-.3 4.6-.1 1.2-.2 1.9-.2 1.9s1-.1 2.7 0c-1.7 0-2.7.1-2.7.1v51s1.7.1 4.3-.2v-.5s1.8 0 4.5-.3c1.3-.2 2.9-.4 4.6-.8-3 .8-5.8 1.3-8.1 1.5-.3 0-.7.1-1 .1v5.4s1.5-.4 3.9-.8c2.5-.4 5.9-1 10-1.3 4-.4 8.6-.5 13.3-.3 4.7.3 9.5 1 14 2.4v-4.4l-2.3-13.3z"
                opacity="0"
              />
              <path
                d="M296 121.8s-.1-.8-.1-1.9c-.1-1.2-.2-2.8-.3-4.6s-.2-3.6-.3-5.3c-.1-1.7-.1-3.2-.1-4.2s-.4-1.5-1-1.8c-.6-.2-1.3-.2-2.1 0s-1.5.5-2.1.7l-1 .5s-.5-.1-1.2-.3c-.7-.2-1.8-.5-2.9-.8-1.1-.3-2.3-.6-3.5-.9s-2.2-.6-3-.8c-.8-.2-1.5-.3-2.3-.3-.8 0-1.5.1-2.3.2-.8.2-1.6.4-2.5.7-.9.3-1.9.6-2.9 1-1.1.4-2.1 1.6-3.1 3.3s-2 3.6-2.8 5.6c-.8 2-1.5 3.9-2 5.3s-.8 2.4-.8 2.4l-2.3 13.3-2.3 13.3-2.3 13.3-2.3 13.3v4.4c4.5-1.4 9.3-2.2 14-2.4 4.7-.3 9.3-.1 13.3.3s7.5.9 10 1.3c2.5.5 3.9.8 3.9.8v-5.4c-.3 0-.6-.1-1-.1-2.3-.2-5.1-.7-8.1-1.5 1.7.4 3.2.7 4.6.8 2.7.3 4.5.3 4.5.3v.5c2.6.2 4.3.2 4.3.2v-51.2c0 .1-.9 0-2.4 0h2.4zm-18.7 47.6c-3.6-1.5-7.2-3.8-9.9-7.4-.2-.2-.3-.4-.5-.6.2.3.4.5.6.7 3.2 3.8 7.4 6.3 11.6 7.9 1.1.4 2.3.8 3.4 1.1-1.6-.4-3.4-.9-5.2-1.7z"
                opacity="0"
              />
              <path
                d="M292.7 290.2v42.9s-1.4 0-3.6-.1c0 1.1-.1 9.4-6.6 12.2-7 3-9.5 6.5-9.5 6.5s-10.6.9-13.3-.8c-2.6-1.7-14.3-1.2-14.3-1.2s-1.9-6.1-1-15.5l-.3-5.4s-7.5-9.2-7.2-12c.4-2.8 8.4-7.7 8.4-7.7l19.5-10.6s-.2.6-.4 1.5c7.9-11.7 28.3-9.8 28.3-9.8z"
                opacity="0"
              />
              <path
                d="M67.9 327.8l-.3 5.4c1 9.4-1 15.5-1 15.5s-11.7-.5-14.3 1.2c-2.6 1.7-13.3.8-13.3.8s-2.5-3.5-9.5-6.5c-6.5-2.8-6.6-11.1-6.6-12.2-2.2.2-3.6.1-3.6.1v-42.9s20.4-1.9 28.1 9.8c-.2-.9-.3-1.5-.4-1.5l19.5 10.6s8.1 4.9 8.4 7.7c.5 2.8-7 12-7 12z"
                opacity="0"
              />
            </g>
          </svg>
        </Col>
        <Col md={7}>
          <Table responsive>
            <thead>
              <tr>
                <th scope="col" className="text-nowrap" />
                <th scope="col" className="text-nowrap">
                  Clear
                </th>
                <th scope="col" className="text-nowrap text-success">
                  Scratched
                </th>
                <th scope="col" className="text-nowrap text-primary">
                  Painted
                </th>
                <th scope="col" className="text-nowrap text-danger">
                  Replaced
                </th>
              </tr>
            </thead>
            <tbody>
              {damageAreas.map((item, key) => {
                return (
                  <tr key={key}>
                    <td>{item.text}</td>
                    <td>
                      <CustomInput
                        type="radio"
                        id={`clear-${item.value}-${key}`}
                        name={item.value}
                        key={key}
                        value={item.value}
                        onChange={() => {
                          fillParts(key, item.value, {
                            state: "CLEAR",
                            color: "#f6f6f6"
                          });
                        }}
                        checked={
                          "CLEAR" === parts[item.value].state ? true : false
                        }
                      />
                    </td>
                    <td>
                      <CustomInput
                        type="radio"
                        id={`scratched-${item.value}-${key}`}
                        name={item.value}
                        key={key}
                        value={item.value}
                        onChange={() => {
                          fillParts(key, item.value, {
                            state: "SCRATCHED",
                            color: "#4caf50"
                          });
                        }}
                        checked={
                          "SCRATCHED" === parts[item.value].state ? true : false
                        }
                      />
                    </td>
                    <td>
                      <CustomInput
                        type="radio"
                        id={`painted-${item.value}-${key}`}
                        name={item.value}
                        key={key}
                        value={item.value}
                        onChange={() => {
                          fillParts(key, item.value, {
                            state: "PAINTED",
                            color: "#4a90e2"
                          });
                        }}
                        checked={
                          "PAINTED" === parts[item.value].state ? true : false
                        }
                      />
                    </td>
                    <td>
                      <CustomInput
                        type="radio"
                        id={`replaced-${item.value}-${key}`}
                        name={item.value}
                        key={key}
                        value={item.value}
                        onChange={() => {
                          fillParts(key, item.value, {
                            state: "REPLACED",
                            color: "#ff5252"
                          });
                        }}
                        checked={
                          "REPLACED" === parts[item.value].state ? true : false
                        }
                      />
                    </td>
                  </tr>
                );
              })}
            </tbody>
          </Table>
        </Col>
      </Row>
    </div>
  );
};

export default App;
